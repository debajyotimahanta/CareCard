AWSTemplateFormatVersion: "2010-09-09"
Description: Cloudformation template for setting up the Web App via EBS
Parameters:
  NetworkStackName:
    Description: Name of an active CloudFormation stack that contains the networking resources
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
  IamStackName:
    Description: Name of an active CloudFormation stack that contains the IAM resources
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
  InfraStackName:
    Description: Name of an active CloudFormation stack that contains the s3 bucket
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
  SecretsStackName:
    Description: Name of an kms stack
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the AWS Elastic
      Beanstalk instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  DbStackName:
    Description: Name of an CloudFormation db stack that has the db endpoint
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
Resources:
  WebApp:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: !Join [ ' ', [ !Ref 'AWS::StackName', 'EBS env' ]]
      Description: !Join [ ' ', [ !Ref 'AWS::StackName', 'EBS env' ]]
  WebAppStartVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName: !Ref WebApp
      Description: The initial version of the source code for the web app
      SourceBundle:
        S3Bucket:
          Fn::ImportValue: !Sub '${InfraStackName}:CodeBucket'
        S3Key: carecard-1.0-SNAPSHOT.jar

  WebEnv:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName:
        Ref: WebApp
      SolutionStackName: 64bit Amazon Linux 2018.03 v2.10.3 running Java 8
      EnvironmentName: !Join [ '-', [ !Ref 'AWS::StackName', 'EBS-env' ]]
      VersionLabel: !Ref WebAppStartVersion
      Tier:
        Name: WebServer
        Type: Standard
      OptionSettings:
        ####################Auto scaling configuration##########################
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value:
            Fn::ImportValue: !Sub '${IamStackName}:WebServerInstanceProfile'
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: EC2KeyName
          Value: !Ref KeyName
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: InstanceType
          Value: t2.micro
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: SecurityGroups
          Value:
            Fn::ImportValue: !Sub '${NetworkStackName}:PrivateSecurityGroup'
        - Namespace: aws:elb:loadbalancer
          OptionName: ManagedSecurityGroup
          Value:
            Fn::ImportValue: !Sub '${NetworkStackName}:PublicSecurityGroup'
        - Namespace: aws:elb:loadbalancer
          OptionName: SecurityGroups
          Value:
            Fn::ImportValue: !Sub '${NetworkStackName}:PublicSecurityGroup'
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: "1"
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: "1"
        ######################Network configuration########################
        - Namespace: aws:ec2:vpc
          OptionName: VPCId
          Value:
            Fn::ImportValue: !Sub '${NetworkStackName}:VPCId'
        - Namespace: aws:ec2:vpc
          OptionName: Subnets
          Value:
            Fn::Join:
              - ','
              - - Fn::ImportValue: !Sub '${NetworkStackName}:PrivateSubnetOne'
                - Fn::ImportValue: !Sub '${NetworkStackName}:PrivateSubnetTwo'
        - Namespace: aws:ec2:vpc
          OptionName: ELBSubnets
          Value:
            Fn::Join:
              - ','
              - - Fn::ImportValue: !Sub '${NetworkStackName}:PublicSubnetOne'
                - Fn::ImportValue: !Sub '${NetworkStackName}:PublicSubnetTwo'
        - Namespace: aws:ec2:vpc
          OptionName: ELBScheme
          Value: public
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: SSHSourceRestriction
          Value:
            Fn::Join:
              - ", "
              - - "tcp"
                - "22"
                - "22"
                - Fn::ImportValue: !Sub '${NetworkStackName}:BastionSecurityGroup'

        - Namespace: aws:elasticbeanstalk:cloudwatch:logs
          OptionName: StreamLogs
          Value: true

        #Environment variables used by application
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: MASTER_KEY_ID
          Value:
            Fn::ImportValue: !Sub '${SecretsStackName}:MasterKeyArn'
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: spring_profiles_active
          Value: aws
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DB_ENDPOINT
          Value:
            Fn::ImportValue: !Sub '${DbStackName}:DatabaseEndPoint'
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DB_USER
          Value:
            Fn::ImportValue: !Sub '${DbStackName}:DatabaseUser'
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: IMAGE_BUCKET_NAME
          Value:
            Fn::ImportValue: !Sub '${InfraStackName}:ImageBucket'
